Tasks to Complete


* DONE Finish implementation of the recipe upload
  CLOSED: [2019-01-22 Tue 16:01]

* DONE Redirect from the Add page to the login page in the event that we aren't logged in.
  CLOSED: [2019-01-24 Thu 13:10]
  When redirecting we should include an error message saying why you can't hit the add page.

* DONE Configure the Login page to accept error messages so we can pass it from the Add page.
  CLOSED: [2019-01-24 Thu 13:10]

* DONE Set up a configuration to be a single spot where the base URL for the Axios requests works.
  CLOSED: [2019-02-04 Mon 11:28]

* DONE Move Axios out to create a single instance 
  CLOSED: [2019-02-04 Mon 11:53] - For now I'm just making a single instance and calling out with the URL I need.
  This single instance should be initialized one time with the correct base URL from the config as well as maybe
  make a call out to get all the available routes from the API.

  I'm not sure how the I will gather the routes but I think it goes like this:
  1. Hit the API and grab the necessary endpoints JSON
  2. Use that to initialize Axios with the base URL
  3. Create a series of switch statements to handle routing and calling GETs and POSTs

  If this is not the correct way of doing it I will have to research the correct way to handle the calls.

* DONE Create an errors page of some sort
  CLOSED: [2019-01-24 Thu 14:35]
  This error page is going to basically be like the results page where you will pass in a list of errors
  and then render a single error.  It will allow us to stylize as we see fit and reuse across the board.

* DONE Link the error page to all locations where it should be used.
  CLOSED: [2019-01-24 Thu 15:03]

* DONE Fix login page
  CLOSED: [2019-01-24 Thu 15:49]
  It looks like when you successfully login the page isn't redirecting as it should be.  Need to make sure that 
  when you log in with success you either are taken to the previous page you were just at or to a successful
  login page.

* DONE Have Login redirect
  CLOSED: [2019-02-07 Thu 22:35]
  The login page currently just takes you to a successful login message if you login or to an already logged in page
  if the user is already logged in.  It should really redirect to whatever page you wnated to go to.

* DONE Create Logout '[3/3]'
  CLOSED: [2019-02-07 Thu 22:34]
  1. [X] Create the link
  2. [X] Toggle between Log In/Out based on current status
  3. [X] Determine if cookie should expire on log out
     1. [X] If yes then expire cookie.
     2. [X] If not then figure out what logging out actually means

* TODO Figure out a way to handle updating the header with appropriate state for toggling login/out

* TODO Break out the single recipe to a single recipe preview and a full view

* TODO Fix formatting for inserting hours and minutes
  This apparently currently just inserts a number without a care for having an hours and minutes.
  Apparently in my code I did not check for there being an hour and minute present but is ok with
  simply letting the time go in.  Maybe I need to convert this on the front end?

  Currently - I tell the user to input minutes for everything so I can convert but I should check 
  with someone to see if they would want to put in hours and minutes or just minutes.

* TODO Make images for half and quarter star ratings.
  This is only a short term fix and should actually be changed to filling in a star a percentage
  based on the remainder of the rating that isn't a full star.

* DONE Break out some of the base functionality into a parent class that other classes can then extend.
  CLOSED: [2019-02-07 Thu 23:22]
  I'm thinking a lot of the basic stuff like setFormAPI and what not.

  One of the key things here would be to move out the custom_axios calls.

* TODO Move the login encryption stuff to a proper location
  I'm not entirely sure what to do here just yet but I will research it and fix the problem.  For now this just lives
  in the Login.js file in the handleClick.  The specifica concern here is that we have the secret for encrypting
  in plain text in the file.

* DONE Fix the call to the filters once the API call is complete.
  CLOSED: [2019-01-24 Thu 13:33]

* TODO Style pages â€˜[2/7]'
  1. [X] Home Page
  2. [X] Login Page '[2/2]'
     1. [X] Login Success Page
     2. [X] Login Page
  3. [ ] Search Page '[0/2]'
     1. [ ] Search Form
     2. [ ] Search Results Page
  4. [ ] Filter Page '[0/2]'
     1. [ ] Filter Form
     2. [ ] Filter Results page
  5. [ ] Single Recipe Page
  6. [ ] Upload Page
  7. [ ] Error pages

* TODO Port over CSS '[2/6]'
  1. [X] Home Page
  2. [X] Login Page
  3. [ ] Search Page
  4. [ ] Filter Page
  5. [ ] Single Recipe Page
  6. [ ] Upload Page

* TODO Add a create User Page '[0/5]'
  This will involve a few steps:
  1. [ ] Create the page/form
  2. [ ] Style it
  3. [ ] Check to make sure email isn't already being used
     - [ ] This also includes checking for BS emails
  4. [ ] Encrypt password
  5. [ ] Send data to database
