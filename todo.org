Tasks to Complete


* DONE Finish implementation of the recipe upload
  CLOSED: [2019-01-22 Tue 16:01]

* DONE Redirect from the Add page to the login page in the event that we aren't logged in.
  CLOSED: [2019-01-24 Thu 13:10]
  When redirecting we should include an error message saying why you can't hit the add page.

* DONE Configure the Login page to accept error messages so we can pass it from the Add page.
  CLOSED: [2019-01-24 Thu 13:10]

* TODO Set up a configuration to be a single spot where the base URL for the Axios requests works.

* DONE Create an errors page of some sort
  CLOSED: [2019-01-24 Thu 14:35]
  This error page is going to basically be like the results page where you will pass in a list of errors
  and then render a single error.  It will allow us to stylize as we see fit and reuse across the board.

* DONE Link the error page to all locations where it should be used.
  CLOSED: [2019-01-24 Thu 15:03]

* DONE Fix login page
  CLOSED: [2019-01-24 Thu 15:49]
  It looks like when you successfully login the page isn't redirecting as it should be.  Need to make sure that 
  when you log in with success you either are taken to the previous page you were just at or to a successful
  login page.

* TODO Have Login redirect
  The login page currently just takes you to a successful login message if you login or to an already logged in page
  if the user is already logged in.  It should really redirect to whatever page you wnated to go to.

* TODO Break out some of the base functionality into a parent class that other classes can then extend.

* TODO Move the login encryption stuff to a proper location
  I'm not entirely sure what to do here just yet but I will research it and fix the problem.  For now this just lives
  in the Login.js file in the handleClick.  The specifica concern here is that we have the secret for encrypting
  in plain text in the file.

* DONE Fix the call to the filters once the API call is complete.
  CLOSED: [2019-01-24 Thu 13:33]

* TODO Style pages â€˜[0/7]'
  1. [ ] Home Page
  2. [ ] Login Page '[0/1]'
     1. [ ] Login Success Page
  3. [ ] Search Page '[0/1]'
     1. [ ] Search Results Page
  4. [ ] Filter Page '[0/1]'
     1. [ ] Filter Results page
  5. [ ] Single Recipe Page
  6. [ ] Upload Page
  7. [ ] Error pages

* TODO Port over CSS '[0/6]'
  1. [ ] Home Page
  2. [ ] Login Page
  3. [ ] Search Page
  4. [ ] Filter Page
  5. [ ] Single Recipe Page
  6. [ ] Upload Page

* TODO Add a create User Page '[0/5]'
  This will involve a few steps:
  1. [ ] Create the page/form
  2. [ ] Style it
  3. [ ] Check to make sure email isn't already being used
     - [ ] This also includes checking for BS emails
  4. [ ] Encrypt password
  5. [ ] Send data to database
